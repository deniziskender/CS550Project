WCET is the maximum length of time that the task could take to execute. So, the goal of our WCET analysis is to find an upper bound to the execution of a task. WCET analysis program takes C source file as input and calculates the execution time of this C code in terms of VSCPU instructions. It has the same certain limitations with the compiler.

Key limitations:

• No structs.
• Supported types are:
   – int (32-bit), float (32-bit).
   – Pointer to a supported type (e.g. int*, float**).
   – One dimensional array of a supported type (e.g. int[]).
• No standard library. So functions like malloc and free do not exist. All the data is
statically allocated or in the stack – there is no heap allocation.
• No switch.
• The code generated for division and remainder operations are very slow.
The following features are supported:
• Pointer arithmetic.
• Array operations.
• Functions with void and non-void return types.
• Direct or indirect recursion.
• Const and non-const global variables.
• For-loops and while-loops with break and continue.

Usage -> Write your code into the specified section. (Simple C code is already provided). Then, click to "Get WCET analysis" button. The result will be a file called "wcetresult" which includes VSCPU instructions and their count on the given code. 
